@page "/myPresents"
@rendermode InteractiveServer
@attribute [Authorize]

@using Christmas.Components.MongoDb
@using Christmas.Components.Services
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.Forms
@using Microsoft.AspNetCore.Components.Routing
@using Microsoft.AspNetCore.Components.Web
@using System.Security.Claims

@inject ChristmasPresentService ChristmasPresentService

@if (_myChristmasPresents != null && _myChristmasPresents.Count() > 0)
{
    <h5>Presents:</h5>
    <ul>
    @foreach(string present in _myChristmasPresents)
    {
        <li>@present &nbsp;
            @if (_myChristmasPresents.Count() > 1)
            {
                <button @onclick="@(() => DeleteChristmasPresent(present))" type="button">Delete</button>
            }
        </li>
    }
    </ul>
}
else
{
    <p>Loading...</p>
}

<input @bind="presentToAdd" type="text" @onkeyup="Enter"/>
<button @onclick="AddChristmasPresent" type="button">Add Present</button>

@code {
    [CascadingParameter]
    private Task<AuthenticationState>? authenticationState { get; set; }

    private ClaimsPrincipal User { get; set; }

    private IEnumerable<string>? _myChristmasPresents { get; set; }

    private string presentToAdd { get; set; } = "";

    protected async override Task OnInitializedAsync()
    {
        User = (await authenticationState).User;

        await Task.Run(RefreshMyChristmasPresents);

        await base.OnInitializedAsync();
    }

    private void RefreshMyChristmasPresents()
    {
        _myChristmasPresents = ChristmasPresentService.GetPresentsForThisUser(User.FindFirstValue("name"));
    }

    private void AddChristmasPresent()
    {
        if(presentToAdd != null && presentToAdd.Length > 0)
        {
            ChristmasPresentService.AddChristmasPresentForThisUser(User.FindFirstValue("name"), presentToAdd);

            RefreshMyChristmasPresents();

            presentToAdd = "";
        }
    }

    private void AddChristmasPresent(string present)
    {
        if(present != null && present.Length > 0)
        {
            ChristmasPresentService.AddChristmasPresentForThisUser(User.FindFirstValue("name"), present);

            RefreshMyChristmasPresents();

            presentToAdd = "";
        }
    }

    private void DeleteChristmasPresent(string presentToDelete)
    {
        ChristmasPresentService.DeleteChristmasPresentForThisUser(User.FindFirstValue("name"), presentToDelete);

        RefreshMyChristmasPresents();
    }

    private void Enter(KeyboardEventArgs e)
    {
        if (e.Code == "Enter" || e.Code == "NumpadEnter")
        {
            AddChristmasPresent(presentToAdd);
        }
    }
}
