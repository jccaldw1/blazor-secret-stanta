@page "/presents"
@attribute [Authorize]

@using Christmas.Components.MongoDb
@using Christmas.Components.Services
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Authorization
@using System.Security.Claims

@inject ChristmasPresentService ChristmasPresentService

@if (_distinctUsers != null && _distinctUsers.Count() > 0)
{
    @foreach(string recipient in _distinctUsers)
    {
        @if(_christmasPresents.Any(present => present.recipient == recipient))
        {
            <h5>Presents for @recipient:</h5>
            @foreach (ChristmasPresent present in _christmasPresents.Where(present => present.recipient == recipient))
            {
                <div class="row">
                    <div class="col-3"/>
                    <p class="col-2">@present.gift</p>
                    <input class="col-1" type="checkbox" checked="@present.gotten" @onchange="((ChangeEventArgs e) => UpdateGottenStatusOfPresent(present, (bool)e.Value))"/>
                </div>
            }
        }
        else
        {
            <p>This person doesn't have any gifts! Let them know!!!</p>
        }
    }
}
else
{
    <p>Loading...</p>
}

@code {
    [CascadingParameter]
    private Task<AuthenticationState>? authenticationState { get; set; }

    private ClaimsPrincipal User{ get; set; }

    private IEnumerable<string> _distinctUsers { get; set; }

    private IEnumerable<ChristmasPresent> _christmasPresents { get; set; }

    protected async override Task OnInitializedAsync()
    {
        User = (await authenticationState).User;

        _christmasPresents = await Task.Run(GetGroupedChristmasPresentsForOtherUsers);

        _distinctUsers = _christmasPresents.Select(present => present.recipient).Distinct();

        await base.OnInitializedAsync();
    }

    private IEnumerable<ChristmasPresent> GetGroupedChristmasPresentsForOtherUsers()
    {
        return ChristmasPresentService.GetPresentsForNotThisUser(User.FindFirstValue("name"));
    }

    private void UpdateGottenStatusOfPresent(ChristmasPresent present, bool gottenStatus)
    {
        ChristmasPresentService.ChangeGottenStatusOfChristmasPresentForOtherUser(present, gottenStatus);
    }
}
